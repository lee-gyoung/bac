@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');
* {
	margin: 0px;
	padding: 0px;
	box-sizing: border-box;
}
ul,
li {
	list-style: none;
}
a {
	text-decoration: none;
}

main {
	width: 100%;
	height: 100vh;
	position: relative;
	overflow: hidden;
	&.bg1 {
		background: linear-gradient(45deg, #8bfa8b, #00d3e2);
	}
	&.bg2 {
		background: linear-gradient(45deg, #d29eff, #8e78ff);
	}
	ul {
		position: absolute;
		top: 15vh;
		left: 10vw;
		display: flex;
		gap: 50px;
		align-items: center;
		li {
			width: 30vw;
			height: 50px;
			display: flex;
			justify-content: center;
			align-items: center;
			position: relative;
			cursor: pointer;
			&::before {
				content: '';
				display: block;
				width: 100%;
				height: 0px;
				border: 1px solid #fff;
				position: absolute;
				top: 50%;
				left: 0px;
				transition: all 0.5s;
			}
			a {
				width: 100%;
				height: 100%;
				display: flex;
				justify-content: center;
				align-items: center;
				font: bold 16px/1 'arial';
				color: #fff;
				overflow: hidden;
				text-indent: 200px;
				position: relative;
				opacity: 0;
				transition: all 0.5s;
				&::before {
					content: '';
					display: block;
					background-color: #fff;
					width: 150px;
					height: 100%;
					position: absolute;
					top: 0;
					left: -200px;
					transform: skewX(40deg);
					transition: all 0.5s 0.3s;
				}
			}
			&.on {
				&::before {
					height: 100%;
					top: 0;
				}
				a {
					opacity: 1;
					text-indent: 0px;
					&::before {
						left: 120%;
					}
				}
			}
		}
	}
	article {
		width: 100%;
		position: absolute;
		top: 50%;
		left: 10vw;
		transform: translateY(-35%);
		opacity: 0;
		z-index: 1;
		// display none을 줄 경우 애니메이션이 보이지 않음! -> 아티클의 모션이 적용되지 않기 때문
		h2 {
			font: normal 10vw/1 'Anton';
			color: #fff;
			overflow: hidden;
			margin-bottom: 40px;
			span {
				display: inline-block;
				text-shadow: 10px 10px 0px rgba($color: #fff, $alpha: 0.5);
				transform: translateY(100%);
				transition-duration: 0.5s;
				// js로 모든 span태그에 반복을 돌면서 0.1s의 딜레이를 점진적으로 부여할 것이기 때문에
				// 그냥 transition으로 부여하지 않음
			}
		}
		p {
			position: relative;
			overflow: hidden;
			margin-bottom: 10px;
			display: inline-block;
			// inlineblock 과 block 속성 부여 구분 잘하기
			span {
				font: bold 30px/1 'arial';
				color: #fff;
				opacity: 0;
				transition: 0.2s 0.3s;
			}
			&::before {
				content: '';
				display: block;
				width: 100%;
				height: 100%;
				background-color: #fff;
				position: absolute;
				top: 0;
				left: -100%;
				transition: 1s;
			}
			&:nth-of-type(2) {
				&:before {
					transition-delay: 0.5s;
				}
				span {
					transition-delay: 0.8s;
				}
			}
		}
		&.on {
			opacity: 1;
			z-index: 2;
			h2 {
				span {
					transform: translateY(0%);
				}
			}
			p {
				span {
					opacity: 1;
				}
				&::before {
					left: 100%;
				}
			}
		}
	}
}
